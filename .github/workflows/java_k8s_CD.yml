name: java_k8s_CD

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      namespace:
        required: true
        type: string
      container_name:
        required: true
        type: string
      tag:
        required: true
        type: string
      stack:
        required: true
        type: string
      platform:
        required: true
        type: string
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "sagaftradevopspoc"
  RESOURCE_GROUP: "devops-poc-Aug-2025"
  CLUSTER_NAME: "devops-poc"
  IMAGE_PULL_SECRET_NAME: "sagaftradevopspoc-pull-secret"

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment}}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Get Tag Name
        run: echo Tag name ${{ inputs.tag }}
      - name: Build and push image to ACR
        run: |
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ inputs.container_name }}:${{ inputs.tag }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .

  deploy:
    environment: ${{ inputs.environment}}
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Deploys mongo
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ./kube/mongo.yaml

      - name: Deploys {{ inputs.container_name }}
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ./kube/knote.yaml
          images: sagaftradevopspoc.azurecr.io/{{ inputs.container_name }}:${{ inputs.tag }}
